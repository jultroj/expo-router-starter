{"version":3,"file":"buildUrlForBundle.native.js","sourceRoot":"","sources":["../../src/async-require/buildUrlForBundle.native.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;;;;AAEH,mEAA2C;AAE3C,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC;SAC/D;QACD,MAAM,IAAI,KAAK,CACb,6IAA6I,CAC9I,CAAC;KACH;IACD,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,IAAA,sBAAY,GAAE,CAAC;IAE1C,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC9E,CAAC;AAZD,8CAYC","sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport getDevServer from \"../getDevServer\";\n\nexport function buildUrlForBundle(bundlePath: string): string {\n  if (process.env.NODE_ENV === \"production\") {\n    if (typeof location !== \"undefined\") {\n      return location.origin.replace(/\\/+$/, \"\") + \"/\" + bundlePath;\n    }\n    throw new Error(\n      'Unable to determine the production URL where additional JavaScript chunks are hosted because the global \"location\" variable is not defined.'\n    );\n  }\n  const { url: serverUrl } = getDevServer();\n\n  return serverUrl.replace(/\\/+$/, \"\") + \"/\" + bundlePath.replace(/^\\/+/, \"\");\n}\n"]}